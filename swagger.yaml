swagger: '2.0'
info:
  title: Service API
  description: API for managing services
  version: '0.0.1'
host: localhost:3000
schemes:
  - http
paths:
  /services:
    get:
      tags:
        - services
      summary: Retrieve a list of services
      security:
        - bearer: []
      parameters:
        - name: search
          in: query
          type: string
          description: Search keyword to filter services
        - name: search_field
          in: query
          type: string
          enum: [name, description]
          description: Search field to use for search (e.g. name, description). Default name.
        - name: order
          in: query
          type: string
          enum: [ASC, DESC]
          description: Sort order for the services (e.g. ASC, DESC)
        - name: sort_field
          in: query
          type: string
          enum: [name]
          description: Sort field to use for order (e.g. name). Default name.
        - name: page
          in: query
          type: integer
          description: Page number for pagination
        - name: size
          in: query
          type: integer
          description: Number of items per page
      responses:
        '200':
          description: A list of services
          schema:
            $ref: '#/definitions/PageDto'
        '400':
          description: Invalid input
        '403':
          description: Write permission not granted
    post:
      tags:
        - services
      summary: Create a new service
      security:
        - bearer: []
      parameters:
        - name: service
          in: body
          schema:
            $ref: '#/definitions/ServiceReq'
      responses:
        '201':
          description: Service created successfully
          schema:
            $ref: '#/definitions/ServiceWithVersions'
        '400':
          description: Invalid input

  /services/{uuid}:
    get:
      tags:
        - services
      summary: Retrieve a specific service with/without versions
      security:
        - bearer: []
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
        - name: versions
          in: query
          type: boolean
          description: Whether to include versions of the service
      responses:
        '200':
          description: A specific service
          schema:
            $ref: '#/definitions/ServiceWithVersions'
        '404':
          description: Service not found
    
    patch:
      tags:
        - services
      summary: Patch name or description of a service
      security:
        - bearer: []
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
        - name: service
          in: body
          schema:
            $ref: '#/definitions/ServiceReq'
      responses:
        '200':
          description: Service updated successfully
          schema:
            $ref: '#/definitions/Service'
        '400':
          description: Invalid input
          
    delete:
      tags:
        - services
      summary: Delete a service
      security:
        - bearer: []
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Service deleted successfully
        '403':
          description: Write permission not granted
          
  /services/{uuid}/versions:
    post:
      tags:
        - services
      summary: Create a new version for a specific service
      security:
        - bearer: []
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
        - name: version
          in: body
          schema:
            $ref: '#/definitions/ServiceVersion'
      responses:
        '201':
          description: Version created successfully
          schema:
            $ref: '#/definitions/Service'
        '400':
          description: Invalid input
        '403':
          description: Write permission not granted

  /services/{uuid}/versions/{number}:
    delete:
      tags:
        - services
      summary: Delete a service
      security:
        - bearer: []
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
        - name: number
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Version deleted successfully
        '403':
          description: Write permission not granted

definitions:
  PageDto:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Service'
      meta:
        type: object
        properties:
          page:
            type: number
          size:
            type: number
          item_count:
            type: number
          page_count:
            type: number
          has_previous_page:
            type: boolean
          has_next_page:
            type: boolean
  
  ServiceReq:
    type: object
    properties:
      name:
        type: string
        maxLength: 150
      description:
        type: string
        maxLength: 500

  Service:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      version_count:
        type: number
        
  ServiceWithVersions:
    properties:
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      versions:
        type: array
        items:
          $ref: '#/definitions/ServiceVersion'

  ServiceVersion:
    type: object
    properties:
      number:
        type: string
        maxLength: 100
      release_date:
        type: string

securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Enter the token with the `Bearer: ` prefix, e.g. "Bearer your_jwt".
